{
  "address": "0xF9C619d863e7838730288C3fbc829658CaFc462c",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balanceDue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "interest",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "qualification",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "pendingFeesCount",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "status",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct AndinLend.Loan",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "name": "FinishLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balanceDue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "interest",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "qualification",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "pendingFeesCount",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "status",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct AndinLend.Loan",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "name": "GrantedLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balanceDue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "interest",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "qualification",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "pendingFeesCount",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "status",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct AndinLend.Loan",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "name": "PaidFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balanceDue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "interest",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "qualification",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "pendingFeesCount",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "status",
              "type": "uint8"
            }
          ],
          "indexed": false,
          "internalType": "struct AndinLend.Loan",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "name": "RequestedLoan",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_qualification",
          "type": "uint8"
        }
      ],
      "name": "addBorrowerQualification",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowerQualification",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20USDTAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllLoans",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balanceDue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "interest",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "qualification",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "pendingFeesCount",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct AndinLend.Loan[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPendingLoans",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balanceDue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "interest",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "qualification",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "pendingFeesCount",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct AndinLend.Loan[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "getLenderByBorrowerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lender",
          "type": "address"
        }
      ],
      "name": "getLoansByLend",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balanceDue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "interest",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "qualification",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "pendingFeesCount",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct AndinLend.Loan[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_borrower",
          "type": "address"
        }
      ],
      "name": "grantLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balanceDue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "interest",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "qualification",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "pendingFeesCount",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_lender",
          "type": "address"
        }
      ],
      "name": "payFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loanTime",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_interest",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_pendingFeesCount",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_creditScore",
          "type": "uint8"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "requestLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_erc20USDTAddress",
          "type": "address"
        }
      ],
      "name": "setERC20ContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2b5548fb5c2e9af8d758947f0725499c819db9950da9f24965bfb1efb478a870",
  "receipt": {
    "to": null,
    "from": "0xf7c197dcB1910D790D52D5fcCEA927dFEDba8B33",
    "contractAddress": "0xF9C619d863e7838730288C3fbc829658CaFc462c",
    "transactionIndex": 2,
    "gasUsed": "1442530",
    "logsBloom": "0x
    "blockHash": "0x6df8fa14f6dc862adfeb184fdcbf0607c798bca52d92c13498354044c5bad424",
    "transactionHash": "0x2b5548fb5c2e9af8d758947f0725499c819db9950da9f24965bfb1efb478a870",
    "logs": [],
    "blockNumber": 38066959,
    "cumulativeGasUsed": "1567358",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9dccbaad6716bde3fc59508ae0a2f6e7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceDue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"qualification\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pendingFeesCount\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct AndinLend.Loan\",\"name\":\"loan\",\"type\":\"tuple\"}],\"name\":\"FinishLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceDue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"qualification\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pendingFeesCount\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct AndinLend.Loan\",\"name\":\"loan\",\"type\":\"tuple\"}],\"name\":\"GrantedLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceDue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"qualification\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pendingFeesCount\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct AndinLend.Loan\",\"name\":\"loan\",\"type\":\"tuple\"}],\"name\":\"PaidFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceDue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"qualification\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pendingFeesCount\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct AndinLend.Loan\",\"name\":\"loan\",\"type\":\"tuple\"}],\"name\":\"RequestedLoan\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_qualification\",\"type\":\"uint8\"}],\"name\":\"addBorrowerQualification\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowerQualification\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20USDTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllLoans\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceDue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"qualification\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pendingFeesCount\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct AndinLend.Loan[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPendingLoans\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceDue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"qualification\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pendingFeesCount\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct AndinLend.Loan[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"getLenderByBorrowerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lender\",\"type\":\"address\"}],\"name\":\"getLoansByLend\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceDue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"qualification\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pendingFeesCount\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct AndinLend.Loan[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"}],\"name\":\"grantLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceDue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"qualification\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"pendingFeesCount\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lender\",\"type\":\"address\"}],\"name\":\"payFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loanTime\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_interest\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_pendingFeesCount\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_creditScore\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"requestLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20USDTAddress\",\"type\":\"address\"}],\"name\":\"setERC20ContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A smart contract that allows users to create loans requests and lenders to borrow USDTs Also returns the lender the borrowed money.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AndinLend.sol\":\"AndinLend\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"contracts/AndinLend.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\\\";\\n\\n/**\\n * A smart contract that allows users to create loans requests and lenders to borrow USDTs\\n * Also returns the lender the borrowed money.\\n */\\ncontract AndinLend {\\n\\tstruct Loan {\\n\\t\\tuint amount;\\n\\t\\tuint balanceDue;\\n\\t\\tuint loanTime;\\n\\t\\tuint fee;\\n\\t\\tuint8 interest;\\n\\t\\tuint8 qualification;\\n\\t\\tuint8 pendingFeesCount;\\n\\t\\tuint8 status;\\n\\t}\\n\\n\\tmapping(address => Loan) public loans;\\n\\tmapping(address => address) private borrowerToLender;\\n\\tmapping(address => address[]) private lenderToBorrowers;\\n\\tmapping(address => uint8) public borrowerQualification;\\n\\taddress[] private borrowersRegister;\\n\\n\\tevent RequestedLoan(address borrower, Loan loan);\\n\\n\\tevent GrantedLoan(address borrower, address lender, Loan loan);\\n\\n\\tevent PaidFee(address borrower, address lender, Loan loan);\\n\\n\\tevent FinishLoan(address borrower, address lender, Loan loan);\\n\\n\\tIERC20 private erc20USDT;\\n\\taddress public owner;\\n\\tbool private isERC20Added = false;\\n\\taddress public erc20USDTAddress;\\n\\n\\tconstructor() {\\n\\t\\towner = msg.sender;\\n\\t}\\n\\n\\tfunction setERC20ContractAddress(address _erc20USDTAddress) external {\\n\\t\\trequire(isERC20Added == false, \\\"Contract address is already added.\\\");\\n\\t\\trequire(\\n\\t\\t\\tmsg.sender == owner,\\n\\t\\t\\t\\\"Only owner can modify the ERC20 Address.\\\"\\n\\t\\t);\\n\\t\\terc20USDT = IERC20(_erc20USDTAddress);\\n\\t\\tisERC20Added = true;\\n\\t\\terc20USDTAddress = _erc20USDTAddress;\\n\\t}\\n\\n\\tfunction requestLoan(\\n\\t\\tuint _amount,\\n\\t\\tuint _loanTime,\\n\\t\\tuint8 _interest,\\n\\t\\tuint8 _pendingFeesCount,\\n\\t\\tuint8 _creditScore,\\n\\t\\tbytes memory _proof\\n\\t) external isERC20AddedModifier {\\n\\t\\trequire(\\n\\t\\t\\tloans[msg.sender].loanTime == 0 || loans[msg.sender].status == 2,\\n\\t\\t\\t\\\"Each user can only have one active loan.\\\"\\n\\t\\t);\\n\\t\\tuint dueMonths = _loanTime / 2628000;\\n\\t\\tuint balanceDue = ((_interest * dueMonths * _amount) / 100) + _amount;\\n\\t\\tuint fee = balanceDue / _pendingFeesCount;\\n\\t\\tuint8 qualification = borrowerQualification[msg.sender];\\n\\t\\tLoan memory newLoanRequest = Loan(\\n\\t\\t\\t_amount,\\n\\t\\t\\tbalanceDue,\\n\\t\\t\\t_loanTime,\\n\\t\\t\\tfee,\\n\\t\\t\\t_interest,\\n\\t\\t\\tqualification,\\n\\t\\t\\t_pendingFeesCount,\\n\\t\\t\\tuint8(0)\\n\\t\\t);\\n\\t\\tif (loans[msg.sender].status != 2) {\\n\\t\\t\\tborrowersRegister.push(msg.sender);\\n\\t\\t}\\n\\t\\tloans[msg.sender] = newLoanRequest;\\n\\t\\temit RequestedLoan(msg.sender, newLoanRequest);\\n\\t}\\n\\n\\tfunction grantLoan(address _borrower) external isERC20AddedModifier {\\n\\t\\trequire(\\n\\t\\t\\tloans[_borrower].loanTime != 0,\\n\\t\\t\\t\\\"The client does not have a loan requirement\\\"\\n\\t\\t);\\n\\t\\trequire(loans[_borrower].status == 0, \\\"The loan is not pending\\\");\\n\\t\\trequire(\\n\\t\\t\\terc20USDT.balanceOf(msg.sender) > loans[_borrower].amount,\\n\\t\\t\\t\\\"Insufficient USDT balance.\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\terc20USDT.allowance(msg.sender, address(this)) >=\\n\\t\\t\\t\\tloans[_borrower].amount,\\n\\t\\t\\t\\\"Insufficient USDT balance allowance.\\\"\\n\\t\\t);\\n\\n\\t\\terc20USDT.transferFrom(msg.sender, _borrower, loans[_borrower].amount);\\n\\t\\tloans[_borrower].status = 1;\\n\\t\\tborrowerToLender[_borrower] = msg.sender;\\n\\t\\tlenderToBorrowers[msg.sender].push(_borrower);\\n\\t\\temit GrantedLoan(_borrower, msg.sender, loans[_borrower]);\\n\\t}\\n\\n\\tfunction payFee(address _lender) external isERC20AddedModifier {\\n\\t\\trequire(\\n\\t\\t\\tloans[msg.sender].loanTime != 0,\\n\\t\\t\\t\\\"Client does not have an active loan.\\\"\\n\\t\\t);\\n\\t\\trequire(loans[msg.sender].status == 1, \\\"The loan is not active.\\\");\\n\\t\\trequire(\\n\\t\\t\\terc20USDT.balanceOf(msg.sender) > loans[msg.sender].fee,\\n\\t\\t\\t\\\"Insufficient USDT balance.\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tborrowerToLender[msg.sender] == _lender,\\n\\t\\t\\t\\\"The address is not the lender of this loan.\\\"\\n\\t\\t);\\n\\n\\t\\terc20USDT.transferFrom(msg.sender, _lender, loans[msg.sender].fee);\\n\\t\\tloans[msg.sender].pendingFeesCount =\\n\\t\\t\\tloans[msg.sender].pendingFeesCount -\\n\\t\\t\\t1;\\n\\t\\temit PaidFee(msg.sender, _lender, loans[msg.sender]);\\n\\t\\tif (loans[msg.sender].pendingFeesCount == 0) {\\n\\t\\t\\tfinishLoan(_lender);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction finishLoan(address _lender) private {\\n\\t\\tloans[msg.sender].status = 2;\\n\\t\\temit FinishLoan(msg.sender, _lender, loans[msg.sender]);\\n\\t}\\n\\n\\tfunction getLenderByBorrowerAddress(\\n\\t\\taddress _borrower\\n\\t) external view returns (address) {\\n\\t\\treturn borrowerToLender[_borrower];\\n\\t}\\n\\n\\tfunction getLoansByLend(\\n\\t\\taddress _lender\\n\\t) external view returns (Loan[] memory) {\\n\\t\\tuint loansByLendCount = lenderToBorrowers[_lender].length;\\n\\t\\tLoan[] memory loansByLend = new Loan[](loansByLendCount);\\n\\t\\taddress[] memory borrowers = lenderToBorrowers[_lender];\\n\\n\\t\\tfor (uint i = 0; i < borrowers.length; i++) {\\n\\t\\t\\taddress borrower = borrowers[i];\\n\\t\\t\\tloansByLend[i] = loans[borrower];\\n\\t\\t}\\n\\n\\t\\treturn loansByLend;\\n\\t}\\n\\n\\tfunction getAllLoans()\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Loan[] memory, address[] memory)\\n\\t{\\n\\t\\tuint addressesCount = borrowersRegister.length;\\n\\t\\tLoan[] memory allLoans = new Loan[](addressesCount);\\n\\n\\t\\tfor (uint i = 0; i < addressesCount; i++) {\\n\\t\\t\\taddress borrower = borrowersRegister[i];\\n\\t\\t\\tallLoans[i] = loans[borrower];\\n\\t\\t}\\n\\n\\t\\treturn (allLoans, borrowersRegister);\\n\\t}\\n\\n\\t// get all loans with status = 0\\n\\tfunction getAllPendingLoans()\\n\\t\\texternal\\n\\t\\tview\\n\\t\\treturns (Loan[] memory, address[] memory)\\n\\t{\\n\\t\\tLoan[] memory pendingLoans = new Loan[](borrowersRegister.length);\\n\\t\\tfor (uint i = 0; i < borrowersRegister.length; i++) {\\n\\t\\t\\taddress borrower = borrowersRegister[i];\\n\\t\\t\\tif (loans[borrower].status == 0) {\\n\\t\\t\\t\\tpendingLoans[i] = loans[borrower];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn (pendingLoans, borrowersRegister);\\n\\t}\\n\\n\\tfunction addBorrowerQualification(\\n\\t\\taddress _borrower,\\n\\t\\tuint8 _qualification\\n\\t) external {\\n\\t\\tborrowerQualification[_borrower] = _qualification;\\n\\t}\\n\\n\\tmodifier isERC20AddedModifier() {\\n\\t\\trequire(\\n\\t\\t\\tisERC20Added == true,\\n\\t\\t\\t\\\"USDT contract address is not added by the owner, yet.\\\"\\n\\t\\t);\\n\\t\\t_;\\n\\t}\\n}\\n\",\"keccak256\":\"0x7569f3e60ab517587085c773f95ecb5537cb5b5271de5efede7332db70b1eec8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526006805460ff60a01b1916905534801561001d57600080fd5b50600680546001600160a01b031916331790556118ba8061003f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806373b4086b1161008c578063a5bfd16a11610066578063a5bfd16a146102a5578063ac4a231d146102ad578063c4356cc9146102c0578063e3ae469a146102d357600080fd5b806373b4086b146101ab5780638611610d1461024e5780638da5cb5b1461029257600080fd5b8063251b12ba146100d45780633b17659d146100f35780634bcf17df14610128578063601a04771461013d57806364ec0309146101785780636f5a955b14610198575b600080fd5b6100dc6102e6565b6040516100ea9291906114c7565b60405180910390f35b610116610101366004611543565b60036020526000908152604090205460ff1681565b60405160ff90911681526020016100ea565b61013b61013636600461158c565b6104af565b005b61013b61014b366004611681565b6001600160a01b03919091166000908152600360205260409020805460ff191660ff909216919091179055565b61018b610186366004611543565b61075e565b6040516100ea91906116b4565b61013b6101a6366004611543565b61091e565b6102076101b9366004611543565b600060208190529081526040902080546001820154600283015460038401546004909401549293919290919060ff808216916101008104821691620100008204811691630100000090041688565b60408051988952602089019790975295870194909452606086019290925260ff908116608086015290811660a085015290811660c08401521660e0820152610100016100ea565b61027a61025c366004611543565b6001600160a01b039081166000908152600160205260409020541690565b6040516001600160a01b0390911681526020016100ea565b60065461027a906001600160a01b031681565b6100dc610cc7565b61013b6102bb366004611543565b610e62565b60075461027a906001600160a01b031681565b61013b6102e1366004611543565b610f71565b606080600060048054905067ffffffffffffffff81111561030957610309611576565b60405190808252806020026020018201604052801561034257816020015b61032f6113d5565b8152602001906001900390816103275790505b50905060005b60045481101561044657600060048281548110610367576103676116c7565b60009182526020808320909101546001600160a01b031680835290829052604082206004015490925060ff630100000090910416900361043d576001600160a01b038116600090815260208181526040918290208251610100808201855282548252600183015493820193909352600282015493810193909352600381015460608401526004015460ff8082166080850152918104821660a0840152620100008104821660c0840152630100000090041660e08201528351849084908110610431576104316116c7565b60200260200101819052505b50600101610348565b508060048080548060200260200160405190810160405280929190818152602001828054801561049f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610481575b5050505050905092509250509091565b600654600160a01b900460ff1615156001146104e65760405162461bcd60e51b81526004016104dd906116dd565b60405180910390fd5b3360009081526020819052604090206002015415806105215750336000908152602081905260409020600401546301000000900460ff166002145b61057e5760405162461bcd60e51b815260206004820152602860248201527f4561636820757365722063616e206f6e6c792068617665206f6e6520616374696044820152673b32903637b0b71760c11b60648201526084016104dd565b600061058d622819a087611748565b90506000876064816105a28560ff8b1661176a565b6105ac919061176a565b6105b69190611748565b6105c09190611787565b905060006105d160ff871683611748565b336000818152600360209081526040808320548151610100810183528f81528084018990528083018f90526060810187905260ff8e8116608083015291821660a082018190528d831660c083015260e08201869052958552928490529220600401549394509192630100000090041660021461068a57600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b031916331790555b3360008181526020818152604091829020845181559084015160018201558184015160028201556060840151600382015560808401516004909101805460a086015160c087015160e088015160ff90811663010000000263ff0000001992821662010000029290921663ffff0000199382166101000261ffff199095169190961617929092171692909217919091179055517fe444deb832dd50f14014e4abe6c3b4f9666847d9774fd81d00b3b7fabb8bd50c9161074991849061179a565b60405180910390a15050505050505050505050565b6001600160a01b0381166000908152600260205260408120546060918167ffffffffffffffff81111561079357610793611576565b6040519080825280602002602001820160405280156107cc57816020015b6107b96113d5565b8152602001906001900390816107b15790505b506001600160a01b03851660009081526002602090815260408083208054825181850281018501909352808352949550929390929183018282801561083a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161081c575b5050505050905060005b8151811015610914576000828281518110610861576108616116c7565b6020908102919091018101516001600160a01b03811660009081528083526040908190208151610100808201845282548252600183015495820195909552600282015492810192909252600381015460608301526004015460ff8082166080840152938104841660a0830152620100008104841660c08301526301000000900490921660e08301528551909250859084908110610900576109006116c7565b602090810291909101015250600101610844565b5090949350505050565b600654600160a01b900460ff16151560011461094c5760405162461bcd60e51b81526004016104dd906116dd565b3360009081526020819052604081206002015490036109b95760405162461bcd60e51b8152602060048201526024808201527f436c69656e7420646f6573206e6f74206861766520616e20616374697665206c60448201526337b0b71760e11b60648201526084016104dd565b336000908152602081905260409020600401546301000000900460ff16600114610a255760405162461bcd60e51b815260206004820152601760248201527f546865206c6f616e206973206e6f74206163746976652e00000000000000000060448201526064016104dd565b33600081815260208190526040908190206003015460055491516370a0823160e01b81526004810193909352916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa891906117b8565b11610af55760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420555344542062616c616e63652e00000000000060448201526064016104dd565b336000908152600160205260409020546001600160a01b03828116911614610b735760405162461bcd60e51b815260206004820152602b60248201527f5468652061646472657373206973206e6f7420746865206c656e646572206f6660448201526a103a3434b9903637b0b71760a91b60648201526084016104dd565b60055433600081815260208190526040908190206003015490516323b872dd60e01b815260048101929092526001600160a01b0384811660248401526044830191909152909116906323b872dd906064016020604051808303816000875af1158015610be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0791906117d1565b5033600090815260208190526040902060040154610c309060019062010000900460ff166117f3565b336000818152602081905260409081902060048101805460ff95909516620100000262ff00001990951694909417909355517f2ff0630382012eddd9a1b621317fc9eafa8e1c94fd463f3114461e6b71fc481f92610c91929185919061180c565b60405180910390a13360009081526020819052604081206004015462010000900460ff169003610cc457610cc48161137d565b50565b600454606090819060008167ffffffffffffffff811115610cea57610cea611576565b604051908082528060200260200182016040528015610d2357816020015b610d106113d5565b815260200190600190039081610d085790505b50905060005b82811015610df857600060048281548110610d4657610d466116c7565b60009182526020808320909101546001600160a01b03168083528282526040928390208351610100818101865282548252600183015494820194909452600282015494810194909452600381015460608501526004015460ff8082166080860152928104831660a0850152620100008104831660c08501526301000000900490911660e08301528451909250849084908110610de457610de46116c7565b602090810291909101015250600101610d29565b5080600480805480602002602001604051908101604052809291908181526020018280548015610e5157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e33575b505050505090509350935050509091565b600654600160a01b900460ff1615610ec75760405162461bcd60e51b815260206004820152602260248201527f436f6e7472616374206164647265737320697320616c72656164792061646465604482015261321760f11b60648201526084016104dd565b6006546001600160a01b03163314610f325760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206f776e65722063616e206d6f64696679207468652045524332302060448201526720b2323932b9b99760c11b60648201526084016104dd565b600580546001600160a01b039092166001600160a01b031992831681179091556006805460ff60a01b1916600160a01b17905560078054909216179055565b600654600160a01b900460ff161515600114610f9f5760405162461bcd60e51b81526004016104dd906116dd565b6001600160a01b038116600090815260208190526040812060020154900361101d5760405162461bcd60e51b815260206004820152602b60248201527f54686520636c69656e7420646f6573206e6f7420686176652061206c6f616e2060448201526a1c995c5d5a5c995b595b9d60aa1b60648201526084016104dd565b6001600160a01b0381166000908152602081905260409020600401546301000000900460ff16156110905760405162461bcd60e51b815260206004820152601760248201527f546865206c6f616e206973206e6f742070656e64696e6700000000000000000060448201526064016104dd565b6001600160a01b03818116600090815260208190526040908190205460055491516370a0823160e01b8152336004820152909291909116906370a0823190602401602060405180830381865afa1580156110ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111291906117b8565b1161115f5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420555344542062616c616e63652e00000000000060448201526064016104dd565b6001600160a01b0381811660009081526020819052604090819020546005549151636eb1769f60e11b81523360048201523060248201529092919091169063dd62ed3e90604401602060405180830381865afa1580156111c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e791906117b8565b10156112415760405162461bcd60e51b8152602060048201526024808201527f496e73756666696369656e7420555344542062616c616e636520616c6c6f77616044820152633731b29760e11b60648201526084016104dd565b6005546001600160a01b03828116600081815260208190526040908190205490516323b872dd60e01b8152336004820152602481019290925260448201529116906323b872dd906064016020604051808303816000875af11580156112aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ce91906117d1565b506001600160a01b03811660008181526020818152604080832060048101805463ff00000019166301000000179055600180845282852080546001600160a01b031990811633908117909255818752600286528487208054938401815587528587209092018054909216871790915594845292909152517f5b7739e45c88b0768f3d0b82e2e33c39f41d4a65e0bb6ff5aa18bf59f2493f009261137292859261180c565b60405180910390a150565b336000818152602081905260409081902060048101805463ff0000001916630200000017905590517f0402c2a9d0a86436cc8f73f638b1d1a4c96da0b2ac542c2a731c5517ce8e4a809261137292909185919061180c565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff1681525090565b8051825260208101516020830152604081015160408301526060810151606083015260ff608082015116608083015260ff60a08201511660a083015260ff60c08201511660c083015260ff60e08201511660e08301525050565b60008151808452602080850194506020840160005b838110156114bc576114a8878351611426565b610100969096019590820190600101611495565b509495945050505050565b6040815260006114da6040830185611480565b82810360208481019190915284518083528582019282019060005b8181101561151a5784516001600160a01b0316835293830193918301916001016114f5565b5090979650505050505050565b80356001600160a01b038116811461153e57600080fd5b919050565b60006020828403121561155557600080fd5b61155e82611527565b9392505050565b803560ff8116811461153e57600080fd5b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c087890312156115a557600080fd5b86359550602087013594506115bc60408801611565565b93506115ca60608801611565565b92506115d860808801611565565b915060a087013567ffffffffffffffff808211156115f557600080fd5b818901915089601f83011261160957600080fd5b81358181111561161b5761161b611576565b604051601f8201601f19908116603f0116810190838211818310171561164357611643611576565b816040528281528c602084870101111561165c57600080fd5b8260208601602083013760006020848301015280955050505050509295509295509295565b6000806040838503121561169457600080fd5b61169d83611527565b91506116ab60208401611565565b90509250929050565b60208152600061155e6020830184611480565b634e487b7160e01b600052603260045260246000fd5b60208082526035908201527f5553445420636f6e74726163742061646472657373206973206e6f742061646460408201527432b210313c903a34329037bbb732b916103cb2ba1760591b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008261176557634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761178157611781611732565b92915050565b8082018082111561178157611781611732565b6001600160a01b0383168152610120810161155e6020830184611426565b6000602082840312156117ca57600080fd5b5051919050565b6000602082840312156117e357600080fd5b8151801515811461155e57600080fd5b60ff828116828216039081111561178157611781611732565b6001600160a01b039384168152919092166020820152815460408201526001820154606082015260028201546080820152600382015460a082015260049091015460ff80821660c0840152600882901c811660e0840152601082901c811661010084015260189190911c16610120820152610140019056fea2646970667358221220ef7cb2af1ce4ba20bfecf2943de26f959ae0e6347779ea4f2e1ee2ce560b145164736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806373b4086b1161008c578063a5bfd16a11610066578063a5bfd16a146102a5578063ac4a231d146102ad578063c4356cc9146102c0578063e3ae469a146102d357600080fd5b806373b4086b146101ab5780638611610d1461024e5780638da5cb5b1461029257600080fd5b8063251b12ba146100d45780633b17659d146100f35780634bcf17df14610128578063601a04771461013d57806364ec0309146101785780636f5a955b14610198575b600080fd5b6100dc6102e6565b6040516100ea9291906114c7565b60405180910390f35b610116610101366004611543565b60036020526000908152604090205460ff1681565b60405160ff90911681526020016100ea565b61013b61013636600461158c565b6104af565b005b61013b61014b366004611681565b6001600160a01b03919091166000908152600360205260409020805460ff191660ff909216919091179055565b61018b610186366004611543565b61075e565b6040516100ea91906116b4565b61013b6101a6366004611543565b61091e565b6102076101b9366004611543565b600060208190529081526040902080546001820154600283015460038401546004909401549293919290919060ff808216916101008104821691620100008204811691630100000090041688565b60408051988952602089019790975295870194909452606086019290925260ff908116608086015290811660a085015290811660c08401521660e0820152610100016100ea565b61027a61025c366004611543565b6001600160a01b039081166000908152600160205260409020541690565b6040516001600160a01b0390911681526020016100ea565b60065461027a906001600160a01b031681565b6100dc610cc7565b61013b6102bb366004611543565b610e62565b60075461027a906001600160a01b031681565b61013b6102e1366004611543565b610f71565b606080600060048054905067ffffffffffffffff81111561030957610309611576565b60405190808252806020026020018201604052801561034257816020015b61032f6113d5565b8152602001906001900390816103275790505b50905060005b60045481101561044657600060048281548110610367576103676116c7565b60009182526020808320909101546001600160a01b031680835290829052604082206004015490925060ff630100000090910416900361043d576001600160a01b038116600090815260208181526040918290208251610100808201855282548252600183015493820193909352600282015493810193909352600381015460608401526004015460ff8082166080850152918104821660a0840152620100008104821660c0840152630100000090041660e08201528351849084908110610431576104316116c7565b60200260200101819052505b50600101610348565b508060048080548060200260200160405190810160405280929190818152602001828054801561049f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610481575b5050505050905092509250509091565b600654600160a01b900460ff1615156001146104e65760405162461bcd60e51b81526004016104dd906116dd565b60405180910390fd5b3360009081526020819052604090206002015415806105215750336000908152602081905260409020600401546301000000900460ff166002145b61057e5760405162461bcd60e51b815260206004820152602860248201527f4561636820757365722063616e206f6e6c792068617665206f6e6520616374696044820152673b32903637b0b71760c11b60648201526084016104dd565b600061058d622819a087611748565b90506000876064816105a28560ff8b1661176a565b6105ac919061176a565b6105b69190611748565b6105c09190611787565b905060006105d160ff871683611748565b336000818152600360209081526040808320548151610100810183528f81528084018990528083018f90526060810187905260ff8e8116608083015291821660a082018190528d831660c083015260e08201869052958552928490529220600401549394509192630100000090041660021461068a57600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b031916331790555b3360008181526020818152604091829020845181559084015160018201558184015160028201556060840151600382015560808401516004909101805460a086015160c087015160e088015160ff90811663010000000263ff0000001992821662010000029290921663ffff0000199382166101000261ffff199095169190961617929092171692909217919091179055517fe444deb832dd50f14014e4abe6c3b4f9666847d9774fd81d00b3b7fabb8bd50c9161074991849061179a565b60405180910390a15050505050505050505050565b6001600160a01b0381166000908152600260205260408120546060918167ffffffffffffffff81111561079357610793611576565b6040519080825280602002602001820160405280156107cc57816020015b6107b96113d5565b8152602001906001900390816107b15790505b506001600160a01b03851660009081526002602090815260408083208054825181850281018501909352808352949550929390929183018282801561083a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161081c575b5050505050905060005b8151811015610914576000828281518110610861576108616116c7565b6020908102919091018101516001600160a01b03811660009081528083526040908190208151610100808201845282548252600183015495820195909552600282015492810192909252600381015460608301526004015460ff8082166080840152938104841660a0830152620100008104841660c08301526301000000900490921660e08301528551909250859084908110610900576109006116c7565b602090810291909101015250600101610844565b5090949350505050565b600654600160a01b900460ff16151560011461094c5760405162461bcd60e51b81526004016104dd906116dd565b3360009081526020819052604081206002015490036109b95760405162461bcd60e51b8152602060048201526024808201527f436c69656e7420646f6573206e6f74206861766520616e20616374697665206c60448201526337b0b71760e11b60648201526084016104dd565b336000908152602081905260409020600401546301000000900460ff16600114610a255760405162461bcd60e51b815260206004820152601760248201527f546865206c6f616e206973206e6f74206163746976652e00000000000000000060448201526064016104dd565b33600081815260208190526040908190206003015460055491516370a0823160e01b81526004810193909352916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610a84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa891906117b8565b11610af55760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420555344542062616c616e63652e00000000000060448201526064016104dd565b336000908152600160205260409020546001600160a01b03828116911614610b735760405162461bcd60e51b815260206004820152602b60248201527f5468652061646472657373206973206e6f7420746865206c656e646572206f6660448201526a103a3434b9903637b0b71760a91b60648201526084016104dd565b60055433600081815260208190526040908190206003015490516323b872dd60e01b815260048101929092526001600160a01b0384811660248401526044830191909152909116906323b872dd906064016020604051808303816000875af1158015610be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0791906117d1565b5033600090815260208190526040902060040154610c309060019062010000900460ff166117f3565b336000818152602081905260409081902060048101805460ff95909516620100000262ff00001990951694909417909355517f2ff0630382012eddd9a1b621317fc9eafa8e1c94fd463f3114461e6b71fc481f92610c91929185919061180c565b60405180910390a13360009081526020819052604081206004015462010000900460ff169003610cc457610cc48161137d565b50565b600454606090819060008167ffffffffffffffff811115610cea57610cea611576565b604051908082528060200260200182016040528015610d2357816020015b610d106113d5565b815260200190600190039081610d085790505b50905060005b82811015610df857600060048281548110610d4657610d466116c7565b60009182526020808320909101546001600160a01b03168083528282526040928390208351610100818101865282548252600183015494820194909452600282015494810194909452600381015460608501526004015460ff8082166080860152928104831660a0850152620100008104831660c08501526301000000900490911660e08301528451909250849084908110610de457610de46116c7565b602090810291909101015250600101610d29565b5080600480805480602002602001604051908101604052809291908181526020018280548015610e5157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e33575b505050505090509350935050509091565b600654600160a01b900460ff1615610ec75760405162461bcd60e51b815260206004820152602260248201527f436f6e7472616374206164647265737320697320616c72656164792061646465604482015261321760f11b60648201526084016104dd565b6006546001600160a01b03163314610f325760405162461bcd60e51b815260206004820152602860248201527f4f6e6c79206f776e65722063616e206d6f64696679207468652045524332302060448201526720b2323932b9b99760c11b60648201526084016104dd565b600580546001600160a01b039092166001600160a01b031992831681179091556006805460ff60a01b1916600160a01b17905560078054909216179055565b600654600160a01b900460ff161515600114610f9f5760405162461bcd60e51b81526004016104dd906116dd565b6001600160a01b038116600090815260208190526040812060020154900361101d5760405162461bcd60e51b815260206004820152602b60248201527f54686520636c69656e7420646f6573206e6f7420686176652061206c6f616e2060448201526a1c995c5d5a5c995b595b9d60aa1b60648201526084016104dd565b6001600160a01b0381166000908152602081905260409020600401546301000000900460ff16156110905760405162461bcd60e51b815260206004820152601760248201527f546865206c6f616e206973206e6f742070656e64696e6700000000000000000060448201526064016104dd565b6001600160a01b03818116600090815260208190526040908190205460055491516370a0823160e01b8152336004820152909291909116906370a0823190602401602060405180830381865afa1580156110ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111291906117b8565b1161115f5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420555344542062616c616e63652e00000000000060448201526064016104dd565b6001600160a01b0381811660009081526020819052604090819020546005549151636eb1769f60e11b81523360048201523060248201529092919091169063dd62ed3e90604401602060405180830381865afa1580156111c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e791906117b8565b10156112415760405162461bcd60e51b8152602060048201526024808201527f496e73756666696369656e7420555344542062616c616e636520616c6c6f77616044820152633731b29760e11b60648201526084016104dd565b6005546001600160a01b03828116600081815260208190526040908190205490516323b872dd60e01b8152336004820152602481019290925260448201529116906323b872dd906064016020604051808303816000875af11580156112aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ce91906117d1565b506001600160a01b03811660008181526020818152604080832060048101805463ff00000019166301000000179055600180845282852080546001600160a01b031990811633908117909255818752600286528487208054938401815587528587209092018054909216871790915594845292909152517f5b7739e45c88b0768f3d0b82e2e33c39f41d4a65e0bb6ff5aa18bf59f2493f009261137292859261180c565b60405180910390a150565b336000818152602081905260409081902060048101805463ff0000001916630200000017905590517f0402c2a9d0a86436cc8f73f638b1d1a4c96da0b2ac542c2a731c5517ce8e4a809261137292909185919061180c565b60405180610100016040528060008152602001600081526020016000815260200160008152602001600060ff168152602001600060ff168152602001600060ff168152602001600060ff1681525090565b8051825260208101516020830152604081015160408301526060810151606083015260ff608082015116608083015260ff60a08201511660a083015260ff60c08201511660c083015260ff60e08201511660e08301525050565b60008151808452602080850194506020840160005b838110156114bc576114a8878351611426565b610100969096019590820190600101611495565b509495945050505050565b6040815260006114da6040830185611480565b82810360208481019190915284518083528582019282019060005b8181101561151a5784516001600160a01b0316835293830193918301916001016114f5565b5090979650505050505050565b80356001600160a01b038116811461153e57600080fd5b919050565b60006020828403121561155557600080fd5b61155e82611527565b9392505050565b803560ff8116811461153e57600080fd5b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c087890312156115a557600080fd5b86359550602087013594506115bc60408801611565565b93506115ca60608801611565565b92506115d860808801611565565b915060a087013567ffffffffffffffff808211156115f557600080fd5b818901915089601f83011261160957600080fd5b81358181111561161b5761161b611576565b604051601f8201601f19908116603f0116810190838211818310171561164357611643611576565b816040528281528c602084870101111561165c57600080fd5b8260208601602083013760006020848301015280955050505050509295509295509295565b6000806040838503121561169457600080fd5b61169d83611527565b91506116ab60208401611565565b90509250929050565b60208152600061155e6020830184611480565b634e487b7160e01b600052603260045260246000fd5b60208082526035908201527f5553445420636f6e74726163742061646472657373206973206e6f742061646460408201527432b210313c903a34329037bbb732b916103cb2ba1760591b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008261176557634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761178157611781611732565b92915050565b8082018082111561178157611781611732565b6001600160a01b0383168152610120810161155e6020830184611426565b6000602082840312156117ca57600080fd5b5051919050565b6000602082840312156117e357600080fd5b8151801515811461155e57600080fd5b60ff828116828216039081111561178157611781611732565b6001600160a01b039384168152919092166020820152815460408201526001820154606082015260028201546080820152600382015460a082015260049091015460ff80821660c0840152600882901c811660e0840152601082901c811661010084015260189190911c16610120820152610140019056fea2646970667358221220ef7cb2af1ce4ba20bfecf2943de26f959ae0e6347779ea4f2e1ee2ce560b145164736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A smart contract that allows users to create loans requests and lenders to borrow USDTs Also returns the lender the borrowed money.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 140,
        "contract": "contracts/AndinLend.sol:AndinLend",
        "label": "loans",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Loan)135_storage)"
      },
      {
        "astId": 144,
        "contract": "contracts/AndinLend.sol:AndinLend",
        "label": "borrowerToLender",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 149,
        "contract": "contracts/AndinLend.sol:AndinLend",
        "label": "lenderToBorrowers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 153,
        "contract": "contracts/AndinLend.sol:AndinLend",
        "label": "borrowerQualification",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint8)"
      },
      {
        "astId": 156,
        "contract": "contracts/AndinLend.sol:AndinLend",
        "label": "borrowersRegister",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 193,
        "contract": "contracts/AndinLend.sol:AndinLend",
        "label": "erc20USDT",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 195,
        "contract": "contracts/AndinLend.sol:AndinLend",
        "label": "owner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 198,
        "contract": "contracts/AndinLend.sol:AndinLend",
        "label": "isERC20Added",
        "offset": 20,
        "slot": "6",
        "type": "t_bool"
      },
      {
        "astId": 200,
        "contract": "contracts/AndinLend.sol:AndinLend",
        "label": "erc20USDTAddress",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_struct(Loan)135_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct AndinLend.Loan)",
        "numberOfBytes": "32",
        "value": "t_struct(Loan)135_storage"
      },
      "t_mapping(t_address,t_uint8)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint8)",
        "numberOfBytes": "32",
        "value": "t_uint8"
      },
      "t_struct(Loan)135_storage": {
        "encoding": "inplace",
        "label": "struct AndinLend.Loan",
        "members": [
          {
            "astId": 120,
            "contract": "contracts/AndinLend.sol:AndinLend",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 122,
            "contract": "contracts/AndinLend.sol:AndinLend",
            "label": "balanceDue",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 124,
            "contract": "contracts/AndinLend.sol:AndinLend",
            "label": "loanTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 126,
            "contract": "contracts/AndinLend.sol:AndinLend",
            "label": "fee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 128,
            "contract": "contracts/AndinLend.sol:AndinLend",
            "label": "interest",
            "offset": 0,
            "slot": "4",
            "type": "t_uint8"
          },
          {
            "astId": 130,
            "contract": "contracts/AndinLend.sol:AndinLend",
            "label": "qualification",
            "offset": 1,
            "slot": "4",
            "type": "t_uint8"
          },
          {
            "astId": 132,
            "contract": "contracts/AndinLend.sol:AndinLend",
            "label": "pendingFeesCount",
            "offset": 2,
            "slot": "4",
            "type": "t_uint8"
          },
          {
            "astId": 134,
            "contract": "contracts/AndinLend.sol:AndinLend",
            "label": "status",
            "offset": 3,
            "slot": "4",
            "type": "t_uint8"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}