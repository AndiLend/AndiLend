{
  "address": "0xEAbc8ceD22FCdb8EE6CA42256cc18a0e23a9c76e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ultraVerifierAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "andinLendAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "_publicInputs",
          "type": "bytes32[]"
        }
      ],
      "name": "sendProof",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8a4b8f7c037aa815622b3bcb671b3884b57d2d16c4ee0e8d12e3a4a69485bedb",
  "receipt": {
    "to": null,
    "from": "0xf7c197dcB1910D790D52D5fcCEA927dFEDba8B33",
    "contractAddress": "0xEAbc8ceD22FCdb8EE6CA42256cc18a0e23a9c76e",
    "transactionIndex": 1,
    "gasUsed": "262236",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x1dbc88c60005de5e614491407b152461134c6bc0ce51a4a4a24e63b6cc35a1a3",
    "transactionHash": "0x8a4b8f7c037aa815622b3bcb671b3884b57d2d16c4ee0e8d12e3a4a69485bedb",
    "logs": [],
    "blockNumber": 4133020,
    "cumulativeGasUsed": "283236",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x4A4c2f325Ce2ab401810D915F0C68144504761aF",
    "0xbAaB3c080B0C2000025a7d66040D291ACC3bb377"
  ],
  "numDeployments": 1,
  "solcInputHash": "9dccbaad6716bde3fc59508ae0a2f6e7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ultraVerifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"andinLendAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"_publicInputs\",\"type\":\"bytes32[]\"}],\"name\":\"sendProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZkCreditScoreVerifier.sol\":\"ZkCreditScoreVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ZkCreditScoreVerifier.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.4;\\n\\ninterface IUltraVerifier {\\n    function verify(bytes calldata _proof, bytes32[] calldata _publicInputs) external view returns (bool);\\n}\\n\\ninterface IAndinLend {\\n    function addBorrowerQualification(address borrower, uint8 qualification) external;\\n}\\n\\ncontract ZkCreditScoreVerifier\\n{\\n    IUltraVerifier ultraVerifier;\\n    IAndinLend andinLend;\\n\\n    constructor(address ultraVerifierAddress, address andinLendAddress)\\n    {\\n        ultraVerifier = IUltraVerifier(ultraVerifierAddress);\\n        andinLend = IAndinLend(andinLendAddress);\\n    }\\n\\n    function sendProof(bytes calldata _proof, bytes32[] calldata _publicInputs) public\\n    {\\n        ultraVerifier.verify(_proof, _publicInputs);\\n        uint8 qualification = uint8(uint(_publicInputs[0]));\\n        andinLend.addBorrowerQualification(msg.sender, qualification);\\n    }\\n}\",\"keccak256\":\"0x9029e4bfec4a37db170383d5a0b6665f3b9d27d4b2859a4e5c6637a5b3474669\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516103a93803806103a983398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b6102eb806100be6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063342087f214610030575b600080fd5b61004361003e36600461014d565b610045565b005b600054604051633a94343960e21b81526001600160a01b039091169063ea50d0e49061007b908790879087908790600401610212565b602060405180830381865afa158015610098573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100bc9190610276565b506000828260008181106100d2576100d261029f565b60015460405163601a047760e01b815233600482015260ff602093909302949094013591821660248501529093506001600160a01b03169163601a04779150604401600060405180830381600087803b15801561012e57600080fd5b505af1158015610142573d6000803e3d6000fd5b505050505050505050565b6000806000806040858703121561016357600080fd5b843567ffffffffffffffff8082111561017b57600080fd5b818701915087601f83011261018f57600080fd5b81358181111561019e57600080fd5b8860208285010111156101b057600080fd5b6020928301965094509086013590808211156101cb57600080fd5b818701915087601f8301126101df57600080fd5b8135818111156101ee57600080fd5b8860208260051b850101111561020357600080fd5b95989497505060200194505050565b6040815283604082015283856060830137600060608583018101829052601f19601f8701168301838103820160208501529081018490526001600160fb1b0384111561025d57600080fd5b8360051b80866080840137016080019695505050505050565b60006020828403121561028857600080fd5b8151801515811461029857600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220b238de93a16b4c153ce33792abc688a4312c353b365312db7d4a0167308626b764736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063342087f214610030575b600080fd5b61004361003e36600461014d565b610045565b005b600054604051633a94343960e21b81526001600160a01b039091169063ea50d0e49061007b908790879087908790600401610212565b602060405180830381865afa158015610098573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100bc9190610276565b506000828260008181106100d2576100d261029f565b60015460405163601a047760e01b815233600482015260ff602093909302949094013591821660248501529093506001600160a01b03169163601a04779150604401600060405180830381600087803b15801561012e57600080fd5b505af1158015610142573d6000803e3d6000fd5b505050505050505050565b6000806000806040858703121561016357600080fd5b843567ffffffffffffffff8082111561017b57600080fd5b818701915087601f83011261018f57600080fd5b81358181111561019e57600080fd5b8860208285010111156101b057600080fd5b6020928301965094509086013590808211156101cb57600080fd5b818701915087601f8301126101df57600080fd5b8135818111156101ee57600080fd5b8860208260051b850101111561020357600080fd5b95989497505060200194505050565b6040815283604082015283856060830137600060608583018101829052601f19601f8701168301838103820160208501529081018490526001600160fb1b0384111561025d57600080fd5b8360051b80866080840137016080019695505050505050565b60006020828403121561028857600080fd5b8151801515811461029857600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220b238de93a16b4c153ce33792abc688a4312c353b365312db7d4a0167308626b764736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1666,
        "contract": "contracts/ZkCreditScoreVerifier.sol:ZkCreditScoreVerifier",
        "label": "ultraVerifier",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IUltraVerifier)1655"
      },
      {
        "astId": 1669,
        "contract": "contracts/ZkCreditScoreVerifier.sol:ZkCreditScoreVerifier",
        "label": "andinLend",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IAndinLend)1663"
      }
    ],
    "types": {
      "t_contract(IAndinLend)1663": {
        "encoding": "inplace",
        "label": "contract IAndinLend",
        "numberOfBytes": "20"
      },
      "t_contract(IUltraVerifier)1655": {
        "encoding": "inplace",
        "label": "contract IUltraVerifier",
        "numberOfBytes": "20"
      }
    }
  }
}